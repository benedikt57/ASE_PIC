<Window x:Class="PicSimulator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PicSimulator;assembly=Adapter" d:DataContext="{d:DesignInstance Type=local:PicViewModel}"
        xmlns:my="clr-namespace:CustomControl;assembly=Adapter"
        mc:Ignorable="d"
        Title="PicSimulator" Height="800" Width="1200">
    <Window.Resources>
        <local:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
        <local:NumberToVisibilityConverter x:Key="NumberToVisibilityConverter"/>
        <local:InOutToBoolConverter x:Key="InOutToBoolConverter"/>
        <local:LEDArrayConverter x:Key="LEDArrayConverter"/>
        <local:StackPointerConverter x:Key="StackPointerConverter"/>
        <local:StartButtonTextConverter x:Key="StartButtonTextConverter"/>
        <!-- Hier wird der Konverter als Ressource deklariert -->
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Datei">
                <MenuItem Header="Laden" Command="{Binding LoadFileCommand}" IsCheckable="False"/>
            </MenuItem>
            <MenuItem Header="Einstellung">
                <MenuItem Header="Quarzfrequenz">
                    <MenuItem Header="32 KHz" IsCheckable="True" IsChecked="{Binding Is032MHzChecked}"/>
                    <MenuItem Header="1 MHz" IsCheckable="True" IsChecked="{Binding Is1MHzChecked}"/>
                    <MenuItem Header="4 MHz" IsCheckable="True" IsChecked="{Binding Is4MHzChecked}"/>
                    <MenuItem Header="8 MHz" IsCheckable="True" IsChecked="{Binding Is8MHzChecked}"/>
                    <MenuItem Header="16 MHz" IsCheckable="True" IsChecked="{Binding Is16MHzChecked}"/>
                </MenuItem>
                <MenuItem Header="Portwahl">
                    <MenuItem Header="Port A" IsCheckable="True" IsChecked="{Binding IsPortAChecked}"/>
                    <MenuItem Header="Port B" IsCheckable="True" IsChecked="{Binding IsPortBChecked}"/>
                </MenuItem>
            </MenuItem>
        </Menu>
        <!--StatusBar-->
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock>Datei:</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding DateiPfad}" Width="1000"/>
            </StatusBarItem>
            <StatusBarItem FlowDirection="RightToLeft">
                <TextBlock>Die 2 Hellsten Leuchten</TextBlock>
            </StatusBarItem>
        </StatusBar>

        <!--Gesamt Grid-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250px"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="170*"/>
                <RowDefinition Height="126*"/>
                <RowDefinition Height="100px"/>
                <RowDefinition Height="307*"/>
                <RowDefinition Height="30px"/>
            </Grid.RowDefinitions>
            <!--Spezial Register-->
            <!--<DataGrid d:ItemsSource="{d:SampleData ItemCount=16}" Grid.RowSpan="2" Margin="0,0,0,0"/>-->
            <StackPanel Grid.Row="3" Margin="0,20,0,0" Grid.RowSpan="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="76*"/>
                        <ColumnDefinition Width="59*"/>
                        <ColumnDefinition Width="15*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Row="0" Grid.Column="0" IsReadOnly="True" Text="W-Reg:"/>
                    <TextBox Grid.Row="0" Grid.Column="1" IsReadOnly="True" Text="{Binding WReg, StringFormat='{}{0:X2}h'}"/>
                    <TextBox Grid.Row="0" Grid.Column="2" IsReadOnly="True" BorderThickness="0"/>
                    <TextBox Grid.Row="0" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" FontWeight="DemiBold" Width="50" Text="Stack"/>

                    <TextBox Grid.Row="1" Grid.Column="0" IsReadOnly="True" Text="FSR:"/>
                    <TextBox Grid.Row="1" Grid.Column="1" IsReadOnly="True" Text="{Binding Ram[4], StringFormat='{}{0:X2}h'}"/>
                    <TextBox Grid.Row="1" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=7}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="1" Grid.Column="3" IsReadOnly="True"  HorizontalAlignment="Center" Width="50" Text="{Binding Stack[7], StringFormat='{}{0:X4}h'}"/>

                    <TextBox Grid.Row="2" Grid.Column="0" IsReadOnly="True" Text="Stackpointer:"/>
                    <TextBox Grid.Row="2" Grid.Column="1" IsReadOnly="True" Text="{Binding StackPointer}"/>
                    <TextBox Grid.Row="2" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=6}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="2" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" Width="50" Text="{Binding Stack[6], StringFormat='{}{0:X4}h'}"/>

                    <TextBox Grid.Row="3" Grid.Column="0" IsReadOnly="True" Text="PCL:"/>
                    <TextBox Grid.Row="3" Grid.Column="1" IsReadOnly="True" Text="{Binding Ram[2], StringFormat='{}{0:X2}h'}"/>
                    <TextBox Grid.Row="3" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=5}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="3" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" Width="50" Text="{Binding Stack[5], StringFormat='{}{0:X4}h'}"/>

                    <TextBox Grid.Row="4" Grid.Column="0" IsReadOnly="True" Text="PCLATCH:"/>
                    <TextBox Grid.Row="4" Grid.Column="1" IsReadOnly="True" Text="{Binding PCLATCH, StringFormat='{}{0:X2}h'}"/>
                    <TextBox Grid.Row="4" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=4}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="4" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" Width="50" Text="{Binding Stack[4], StringFormat='{}{0:X4}h'}"/>

                    <TextBox Grid.Row="5" Grid.Column="0" IsReadOnly="True" Text="PC:"/>
                    <TextBox Grid.Row="5" Grid.Column="1" IsReadOnly="True" Text="{Binding PC, StringFormat='{}{0:X4}h'}"/>
                    <TextBox Grid.Row="5" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=3}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="5" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" Width="50" Text="{Binding Stack[3], StringFormat='{}{0:X4}h'}"/>

                    <TextBox Grid.Row="6" Grid.Column="0" IsReadOnly="True" Text="WDT TM:"/>
                    <TextBox Grid.Row="6" Grid.Column="1" IsReadOnly="True" Text="{Binding WDTTimerString}"/>
                    <TextBox Grid.Row="6" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=2}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="6" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" Width="50" Text="{Binding Stack[2], StringFormat='{}{0:X4}h'}"/>

                    <TextBox Grid.Row="7" Grid.Column="0" IsReadOnly="True" Text="WDT VT:"/>
                    <TextBox Grid.Row="7" Grid.Column="1" IsReadOnly="True" Text="{Binding WDTPrescaler}"/>
                    <TextBox Grid.Row="7" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=1}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="7" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" Width="50" Text="{Binding Stack[1], StringFormat='{}{0:X4}h'}"/>

                    <TextBox Grid.Row="8" Grid.Column="0" IsReadOnly="True" Text="WDT aktiv:"/>
                    <CheckBox Grid.Row="8" Grid.Column="1" IsChecked="{Binding WDTActive}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBox Grid.Row="8" Grid.Column="2" IsReadOnly="True" BorderThickness="0" Text="&#x21E8;" Visibility="{Binding StackPointer, Converter={StaticResource StackPointerConverter}, ConverterParameter=0}" TextAlignment="Right" FontSize="13" FontWeight="Bold"/>
                    <TextBox Grid.Row="8" Grid.Column="3" IsReadOnly="True" HorizontalAlignment="Center" Width="50" Text="{Binding Stack[0], StringFormat='{}{0:X4}h'}"/>

                    <my:StatusGrid Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="4" Margin="0 5 0 0"/>
                    <my:OptionGrid Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="4" Margin="0 5 0 0"/>
                    <my:INTCONGrid Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="4" Margin="0 5 0 0"/>
                </Grid>
            </StackPanel>

            <ScrollViewer Grid.Row="0" Grid.Column="0" Grid.RowSpan="3">
                <my:RAMGrid/>
            </ScrollViewer>

            <ListBox ItemsSource="{Binding Code}" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="3" Margin="5,126,0,0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" IsChecked="{Binding Breakpoint}" Visibility="{Binding HexCode, Converter={StaticResource NumberToVisibilityConverter}}"/>
                            <TextBlock Text="{Binding Code}" Grid.Column="2" FontFamily="Courier New" Margin="5 0 0 0" Background="{Binding IsHighlighted, Converter={StaticResource BooleanToBrushConverter}}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Grid Grid.RowSpan="1" Grid.Column="1" Margin="20,0,0,00">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Ellipse Grid.Column="0" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=7}"/>
                <Ellipse Grid.Column="1" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=6}"/>
                <Ellipse Grid.Column="2" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=5}"/>
                <Ellipse Grid.Column="3" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=4}"/>
                <Ellipse Grid.Column="4" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=3}"/>
                <Ellipse Grid.Column="5" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=2}"/>
                <Ellipse Grid.Column="6" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=1}"/>
                <Ellipse Grid.Column="7" Width="20" Height="20" Fill="{Binding LED, Converter={StaticResource LEDArrayConverter}, ConverterParameter=0}"/>
            </Grid>
            <!--Output Register  - Aufgeteilt in drei Einzelne Register-->
            <!--<DataGrid x:Name="OutputRegister" Grid.Column="2" Height="50" VerticalAlignment="Top" Grid.ColumnSpan="2" HorizontalAlignment="Right" AutoGenerateColumns="False" RowBackground="Black" IsManipulationEnabled="True" Width="185">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="RA"></DataGridTextColumn>
                    <DataGridTextColumn Header="7"  ></DataGridTextColumn>
                    <DataGridTextColumn Header="6"  ></DataGridTextColumn>
                    <DataGridTextColumn Header="5"  ></DataGridTextColumn>
                    <DataGridTextColumn Header="4"  ></DataGridTextColumn>
                    <DataGridTextColumn Header="3"  ></DataGridTextColumn>
                    <DataGridTextColumn Header="2"  ></DataGridTextColumn>
                    <DataGridTextColumn Header="1"  ></DataGridTextColumn>
                    <DataGridTextColumn Header="0"  ></DataGridTextColumn>
                </DataGrid.Columns>


                -->
            <!--<TextBlock Text="0"></TextBlock>-->
            <!--



            </DataGrid>-->
            <StackPanel Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="1" Margin="5,0,5,0" Grid.RowSpan="2">
                <my:InOutputGridA Margin="0, 0, 0, 5"/>
                <my:InOutputGridB/>
            </StackPanel>
            <!--2.Output Register-->
            <!--<DataGrid x:Name="SecondOutputRegister" AutoGenerateColumns="False" Grid.Column="2" Margin="0,50,0,0" Grid.RowSpan="2" Height="50" VerticalAlignment="Top" Grid.ColumnSpan="2" Width="185" HorizontalAlignment="Right" IsManipulationEnabled="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="RA"></DataGridTextColumn>
                    <DataGridTextColumn Header="7" ></DataGridTextColumn>
                    <DataGridTextColumn Header="6" ></DataGridTextColumn>
                    <DataGridTextColumn Header="5" ></DataGridTextColumn>
                    <DataGridTextColumn Header="4" ></DataGridTextColumn>
                    <DataGridTextColumn Header="3" ></DataGridTextColumn>
                    <DataGridTextColumn Header="2" ></DataGridTextColumn>
                    <DataGridTextColumn Header="1" ></DataGridTextColumn>
                    <DataGridTextColumn Header="0" ></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>-->
            <TextBlock Grid.Column="3" HorizontalAlignment="Left" Margin="5,10,0,0" Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Top" Width="90" Height="18" Text="Quarzfrequenz: "/>
            <TextBlock Grid.Column="3" HorizontalAlignment="Left" Margin="105,10,0,0" Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Top" Width="50" Height="18" Text="{Binding AusgewaehlteQuarzfrequenz}"/>
            <TextBlock Grid.Column="3" HorizontalAlignment="Left" Margin="5,30,0,0" Grid.Row="2" TextWrapping="Wrap" Text="Laufzeitzähler:" VerticalAlignment="Top" Width="90"/>
            <TextBlock Grid.Column="3" HorizontalAlignment="Left" Margin="105,30,0,0" Grid.Row="2" TextWrapping="Wrap" Text="{Binding CodeTimerString}" VerticalAlignment="Top" Width="50"/>

            <DockPanel Grid.Column="1" LastChildFill="False" Grid.Row="4" Margin="0" Grid.ColumnSpan="2" Grid.RowSpan="2">
                <Button DockPanel.Dock="Left" Content="{Binding Started, Converter={StaticResource StartButtonTextConverter}}" Command="{Binding StartCommand}" Margin="10,2,10,2"/>
                <Button DockPanel.Dock="Left" Content=" Step "  Command="{Binding StepCommand}" Margin="10,2,10,2"/>
                <Button DockPanel.Dock="Left" Content=" Reset " Command="{Binding ResetCommand}" Margin="10,2,10,2"/>

            </DockPanel>


        </Grid>
    </DockPanel>
</Window>
